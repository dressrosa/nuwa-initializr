/*
 Navicat Premium Data Transfer

 Source Server         : localhost
 Source Server Type    : MySQL
 Source Server Version : 80300 (8.3.0)
 Source Host           : localhost:3306
 Source Schema         : initializr

 Target Server Type    : MySQL
 Target Server Version : 80300 (8.3.0)
 File Encoding         : 65001

 Date: 24/05/2024 19:54:20
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for dependency
-- ----------------------------
DROP TABLE IF EXISTS `dependency`;
CREATE TABLE `dependency` (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT '主键id',
  `language` varchar(10) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '' COMMENT '语言',
  `group_id` varchar(25) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '' COMMENT '组织',
  `artifact_id` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '' COMMENT '项目',
  `version` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '' COMMENT '版本',
  `scope` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '' COMMENT '范围',
  `description` varchar(120) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '' COMMENT '描述',
  `pack_name` varchar(10) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '' COMMENT '归属套装',
  `catalog` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '' COMMENT '目录',
  `gen_option` tinyint(1) NOT NULL DEFAULT '2' COMMENT '选项 1必选 2可选',
  `create_time` datetime NOT NULL DEFAULT '1970-01-01 00:00:00' COMMENT '创建时间',
  `update_time` datetime NOT NULL DEFAULT '1970-01-01 00:00:00' COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin ROW_FORMAT=DYNAMIC COMMENT='maven依赖';

-- ----------------------------
-- Records of dependency
-- ----------------------------
BEGIN;
INSERT INTO `dependency` (`id`, `language`, `group_id`, `artifact_id`, `version`, `scope`, `description`, `pack_name`, `catalog`, `gen_option`, `create_time`, `update_time`) VALUES (1, 'java', 'org.projectlombok', 'lombok', '', 'provided', '解放双手,java自动生成get/set', '', '基础工具', 1, '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `dependency` (`id`, `language`, `group_id`, `artifact_id`, `version`, `scope`, `description`, `pack_name`, `catalog`, `gen_option`, `create_time`, `update_time`) VALUES (3, 'java', 'com.xiaoyu', 'nuwa-redis-spring-boot-starter', '0.0.1-SNAPSHOT', '', '提供基础的redis功能', 'redis', 'Redis', 2, '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `dependency` (`id`, `language`, `group_id`, `artifact_id`, `version`, `scope`, `description`, `pack_name`, `catalog`, `gen_option`, `create_time`, `update_time`) VALUES (4, 'java', 'com.xiaoyu', 'nuwa-utils-spring-boot-starter', '0.0.1-SNAPSHOT', '', '为提高效率而生', '', '基础工具', 2, '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `dependency` (`id`, `language`, `group_id`, `artifact_id`, `version`, `scope`, `description`, `pack_name`, `catalog`, `gen_option`, `create_time`, `update_time`) VALUES (5, 'java', 'mysql', 'mysql-connector-java', '5.1.38', '', '大家都用的数据库', 'mysql', '数据库', 2, '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `dependency` (`id`, `language`, `group_id`, `artifact_id`, `version`, `scope`, `description`, `pack_name`, `catalog`, `gen_option`, `create_time`, `update_time`) VALUES (6, 'java', 'com.zaxxer', 'HikariCP', '3.4.5', '', '一款高效的数据库连接池', 'mysql', '数据库', 2, '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `dependency` (`id`, `language`, `group_id`, `artifact_id`, `version`, `scope`, `description`, `pack_name`, `catalog`, `gen_option`, `create_time`, `update_time`) VALUES (7, 'java', 'org.mybatis.spring.boot', 'mybatis-spring-boot-starter', '1.3.1', '', '回归写sql的原初理想', 'mybatis', 'Mybatis', 2, '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `dependency` (`id`, `language`, `group_id`, `artifact_id`, `version`, `scope`, `description`, `pack_name`, `catalog`, `gen_option`, `create_time`, `update_time`) VALUES (9, 'java', 'com.xiaoyu', 'nuwa-tracer-spring-boot-starter', '0.0.1-SNAPSHOT', '', '处理请求,输出日志', '', '基础工具', 1, '1970-01-01 00:00:00', '1970-01-01 00:00:00');
COMMIT;

-- ----------------------------
-- Table structure for template
-- ----------------------------
DROP TABLE IF EXISTS `template`;
CREATE TABLE `template` (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT '主键id',
  `relative_id` bigint NOT NULL DEFAULT '0' COMMENT '关联id',
  `name` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '' COMMENT '模版名称',
  `language` varchar(10) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '' COMMENT '语言',
  `path` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '' COMMENT '存放目录',
  `pack_name` varchar(10) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '' COMMENT '依赖套装名',
  `params` varchar(512) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '' COMMENT '内置变量',
  `struct_type` tinyint(1) NOT NULL DEFAULT '1' COMMENT '架构类型 1单模块 2多模块',
  `gen_option` tinyint(1) NOT NULL DEFAULT '1' COMMENT '选项 1必选 2可选',
  `content` text CHARACTER SET utf8mb4 COLLATE utf8mb4_bin COMMENT '模版内容',
  `create_time` datetime NOT NULL DEFAULT '1970-01-01 00:00:00' COMMENT '创建时间',
  `update_time` datetime NOT NULL DEFAULT '1970-01-01 00:00:00' COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE,
  KEY `idx_name` (`name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=1028 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin ROW_FORMAT=DYNAMIC COMMENT='代码模版';

-- ----------------------------
-- Records of template
-- ----------------------------
BEGIN;
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (1, 0, 'pom.xml', 'java', '', '', '', 1, 1, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>{{bootVersion}}</version>\n    </parent>\n    <groupId>{{groupId}}</groupId>\n    <artifactId>{{artifactId}}</artifactId>\n    <version>1.0</version>\n    {{#isSingle}}\n    <packaging>jar</packaging>\n    {{/isSingle}}\n    {{^isSingle}}\n    <packaging>pom</packaging>\n    <modules>\n        <module>{{projectName}}-common</module>\n        <module>{{projectName}}-service</module>\n        <module>{{projectName}}-web</module>\n    </modules>\n    {{/isSingle}}\n\n    <properties>\n        <java.version>1.8</java.version>\n    </properties>\n\n    <dependencies>\n       <!--spring-boot-starter-web-->\n         <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n\n        {{{dependencies}}}\n\n        <!--test-->\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n        </dependency>\n    </dependencies>\n\n    {{#isSingle}}\n    <build>\n        <finalName>{{projectName}}</finalName>\n        <resources>\n            <resource>\n                <directory>src/main/resources/config/local</directory>\n            </resource>\n            <resource>\n                <directory>src/main/resources</directory>\n            </resource>\n            <resource>\n                <directory>src/main/java</directory>\n                <filtering>false</filtering>\n            </resource>\n        </resources>\n        <pluginManagement>\n            <plugins>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-compiler-plugin</artifactId>\n                    <version>3.8.1</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-surefire-plugin</artifactId>\n                    <version>3.0.0-M5</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.springframework.boot</groupId>\n                    <artifactId>spring-boot-maven-plugin</artifactId>\n                    <version>{{bootVersion}}</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.codehaus.mojo</groupId>\n                    <artifactId>appassembler-maven-plugin</artifactId>\n                    <version>2.1.0</version>\n                </plugin>\n            </plugins>\n        </pluginManagement>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <configuration>\n                    <skip>true</skip>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-surefire-plugin</artifactId>\n                <configuration>\n                    <skip>true</skip>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n            </plugin>\n        </plugins>\n    </build>\n    {{/isSingle}}\n    {{^isSingle}}\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <configuration>\n                    <source>1.8</source>\n                    <target>1.8</target>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n    {{/isSingle}}\n</project>\n', '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (2, 0, 'build.sh', 'java', '', '', '', 1, 1, '#!/usr/bin/env bash\r\necho \"mvn build $env start...\"\r\n\r\nmvn clean -U package -DskipTests\r\n\r\necho \"mvn build $env end... \"', '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (3, 0, 'startup.sh', 'java', '', '', '', 1, 1, '#!/usr/bin/env bash\n#  startup.sh默认置于项目根目录下\njvmOpts=\"-server -Xms1024m -Xmx1024m -XX:+UseG1GC -XX:+DisableExplicitGC\"\nif [[ \"$env\" == \"prod\"  ]]; then\n    jvmOpts=\"-server -Xms2048m -Xmx2048m -XX:+UseG1GC -XX:+DisableExplicitGC\"\nfi\njava $jvmOpts \\\n    -Dspring.config.location=classpath:config/$env/application.yaml \\\n#    -Dlogging.config=classpath:config/$env/log.xml \\\n    -jar $serviceName.jar \n', '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (4, 0, 'README.md', 'java', '', '', '', 1, 1, '{{description}}', '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (5, 0, 'log.xml', 'java', 'src.main.resources.config.local', '', '{\"env\":\"local\"}', 1, 1, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<configuration>\n    <!-- env:{{env}} -->\n    <property name=\"LOG_HOME\" value=\"/data/logs/{{projectName}}\" />\n    <!-- 从高到地低 OFF 、 FATAL 、 ERROR 、 WARN 、 INFO 、 DEBUG 、 TRACE 、 ALL -->\n    <!-- 日志输出规则 根据当前ROOT 级别，日志输出时，级别高于root默认的级别时 会输出 -->\n    <!--开发环境 -->\n    <appender name=\"STDOUT\" class=\"ch.qos.logback.core.ConsoleAppender\">\n        <filter class=\"ch.qos.logback.classic.filter.ThresholdFilter\">\n            <level>DEBUG</level>\n        </filter>\n        <!-- encoders are assigned the type ch.qos.logback.classic.encoder.PatternLayoutEncoder by default -->\n        <encoder charset=\"UTF-8\">\n            <pattern>[%p][%d{yyyy-MM-dd HH:mm:ss.SSS}][%logger{1.}:%L]%X{pspanid}%X{spanid}%X{traceid}%m%n</pattern>\n        </encoder>\n    </appender>\n\n    <appender name=\"DETAIL\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n        <file>${LOG_HOME}/detail.log</file>\n        <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n            <fileNamePattern>${LOG_HOME}/detail-%d{yyyy-MM-dd}.log\n            </fileNamePattern>\n            <maxHistory>30</maxHistory>\n        </rollingPolicy>\n        <layout class=\"ch.qos.logback.classic.PatternLayout\">\n            <pattern>[%p][%d{yyyy-MM-dd HH:mm:ss.SSS}][%logger{1.}:%L]%X{pspanid}%X{spanid}%X{traceid}%m%n</pattern>\n        </layout>\n    </appender>\n\n    <appender name=\"ERROR\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n        <file>${LOG_HOME}/error.log</file>\n        <filter class=\"ch.qos.logback.classic.filter.ThresholdFilter\">\n            <level>ERROR</level>\n        </filter>\n        <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n            <fileNamePattern>${LOG_HOME}/error-%d{yyyy-MM-dd}.log\n            </fileNamePattern>\n            <maxHistory>30</maxHistory>\n        </rollingPolicy>\n        <layout class=\"ch.qos.logback.classic.PatternLayout\">\n            <pattern>[%p][%d{yyyy-MM-dd HH:mm:ss.SSS}][%logger{1.}:%L]%X{pspanid}%X{spanid}%X{traceid}%m%n</pattern>\n        </layout>\n    </appender>\n\n    <appender name=\"WARN\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n        <file>${LOG_HOME}/warn.log</file>\n        <filter class=\"ch.qos.logback.classic.filter.ThresholdFilter\">\n            <level>WARN</level>\n        </filter>\n        <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n            <fileNamePattern>${LOG_HOME}/warn-%d{yyyy-MM-dd}.log\n            </fileNamePattern>\n            <maxHistory>10</maxHistory>\n        </rollingPolicy>\n        <layout class=\"ch.qos.logback.classic.PatternLayout\">\n            <pattern>[%p][%d{yyyy-MM-dd HH:mm:ss.SSS}][%logger{1.}:%L]%X{pspanid}%X{spanid}%X{traceid}%m%n</pattern>\n        </layout>\n    </appender>\n\n    <!-- 下面配置一些第三方包的日志过滤级别，用于避免刷屏 -->\n    <logger name=\"org.springframework\" level=\"WARN\" />\n    <logger name=\"org.springframework.scheduling\" level=\"INFO\" />\n    <logger name=\"org.springframework.boot.context.embedded.tomcat\" level=\"INFO\" />\n    <logger name=\"org.apache.http\" level=\"WARN\" />\n    <logger name=\"com.zaxxer.hikari\" level=\"ERROR\" />\n    <logger name=\"org.apache.ibatis\" level=\"INFO\" />\n    <logger name=\"org.mybatis.spring.SqlSessionUtils\" level=\"WARN\" />\n    <logger name=\"org.mybatis.spring.transaction\" level=\"WARN\" />\n    <logger name=\"net.sf\" level=\"WARN\" />\n    <logger name=\"io.netty\" level=\"WARN\" />\n    <logger name=\"org.hibernate.validator\" level=\"WARN\" />\n    <logger name=\"org.apache.hc\" level=\"WARN\" />\n    <logger name=\"com.xxl.job.core.thread\" level=\"INFO\" />\n    <logger name=\"org.hibernate\" level=\"INFO\" />\n\n    <!-- 指定包下的log级别 additivity设置不向上传递 -->\n    <logger name=\"{{packageName}}.service.dao\" level=\"INFO\" />\n    <!-- 默认级别和输出 -->\n    <root>\n        <appender-ref ref=\"DETAIL\" />\n        <appender-ref ref=\"ERROR\" />\n        <appender-ref ref=\"WARN\" />\n        <appender-ref ref=\"STDOUT\" />\n    </root>\n</configuration>', '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (6, 5, 'log.xml', 'java', 'src.main.resources.config.test', '', '{\"env\":\"test\"}', 1, 1, NULL, '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (7, 5, 'log.xml', 'java', 'src.main.resources.config.pre', '', '{\"env\":\"perf\"}', 1, 1, NULL, '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (8, 5, 'log.xml', 'java', 'src.main.resources.config.prod', '', '{\"env\":\"production\"}', 1, 1, NULL, '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (9, 0, 'application.yaml', 'java', 'src.main.resources.config.local', '', '{\"env\":\"local\"}', 1, 1, 'env: {{env}}\n#server\nserver:\n  port: 8080\n  servlet:\n    context-path: /{{projectName}}\n  tomcat.uri-encoding: UTF-8\n\n#database\nspring:\n  profiles:\n    active: {{env}}\n{{#mysql}}\n  datasource:\n    type: com.zaxxer.hikari.HikariDataSource\n    maximumPoolSize: 50\n    minimumIdle: 2\n    driverClassName: com.mysql.jdbc.Driver\n    sourceClassName: com.mysql.jdbc.jdbc2.optional.MysqlDataSource\n    url: jdbc:mysql://localhost:3306/ime_{{projectName}}?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowMultiQueries=true&serverTimezone=Asia/Shanghai\n    username: root\n    password: 123456\n{{/mysql}}\n\n\nlogging:\n  config: classpath:config/${env}/log.xml\n\n{{#redis}}\nredis:\n  configs:\n  - name: default\n    host: 127.0.0.1:6379\n    db: 0\n    masterName:\n    timeout: 5000\n    maxIdle: 10\n    minIdle: 2\n    maxWaitMillis : 1000\n    testOnBorrow : true\n    testOnReturn : true\n{{/redis}}', '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (10, 9, 'application.yaml', 'java', 'src.main.resources.config.test', '', '{\"env\":\"test\"}', 1, 1, NULL, '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (11, 9, 'application.yaml', 'java', 'src.main.resources.config.pre', '', '{\"env\":\"perf\"}', 1, 1, NULL, '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (12, 9, 'application.yaml', 'java', 'src.main.resources.config.prod', '', '{\"env\":\"production\"}', 1, 1, NULL, '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (17, 0, 'Application.java', 'java', 'src.main.java.{{packageName}}', '', '', 1, 1, 'package {{packageName}};\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.boot.web.servlet.ServletComponentScan;\n\n@SpringBootApplication\n@ServletComponentScan\npublic class Application {\n\n    public static void main(String args[]) {\n        SpringApplication app = new SpringApplication(Application.class);\n        app.run(args);\n    }\n}', '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (18, 0, 'DataSourceConfiguration.java', 'java', 'src.main.java.{{packageName}}.configuration', 'mysql', '', 1, 2, 'package {{packageName}}.configuration;\r\n\r\nimport javax.sql.DataSource;\r\n\r\nimport org.springframework.boot.context.properties.ConfigurationProperties;\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.Configuration;\r\n\r\nimport com.zaxxer.hikari.HikariConfig;\r\nimport com.zaxxer.hikari.HikariDataSource;\r\n\r\nimport lombok.Setter;\r\n\r\n/**\r\n * 配置数据库连接池\r\n */\r\n@Configuration\r\n@ConfigurationProperties(prefix = \"spring.datasource\")\r\n@Setter\r\npublic class DataSourceConfiguration {\r\n\r\n    private String username;\r\n    private String password;\r\n    private String url;\r\n\r\n    private String driverClassName;\r\n    private int maximumPoolSize;\r\n    private int minimumIdle;\r\n\r\n    /**\r\n     * 初始化Hikari连接池\r\n     */\r\n    @Bean(name = \"dataSource\")\r\n    public DataSource initDataSource() {\r\n        HikariConfig config = new HikariConfig();\r\n        config.setMaximumPoolSize(maximumPoolSize);\r\n        config.setMinimumIdle(minimumIdle);\r\n        config.setDriverClassName(driverClassName);\r\n        config.setUsername(username);\r\n        config.setPassword(password);\r\n        config.setJdbcUrl(url);\r\n        return new HikariDataSource(config);\r\n    }\r\n\r\n}', '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (19, 0, 'MybatisConfiguration.java', 'java', 'src.main.java.{{packageName}}.configuration', 'mybatis', '', 1, 1, 'package {{packageName}}.configuration;\r\n\r\nimport javax.sql.DataSource;\r\n\r\nimport org.apache.ibatis.session.SqlSessionFactory;\r\nimport org.mybatis.spring.SqlSessionFactoryBean;\r\nimport org.mybatis.spring.SqlSessionTemplate;\r\nimport org.mybatis.spring.annotation.MapperScan;\r\nimport org.mybatis.spring.boot.autoconfigure.SpringBootVFS;\r\nimport org.springframework.beans.factory.annotation.Qualifier;\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.core.io.support.PathMatchingResourcePatternResolver;\r\nimport org.springframework.core.io.support.ResourcePatternResolver;\r\nimport org.springframework.jdbc.datasource.DataSourceTransactionManager;\r\n\r\n/**\r\n * 配置数据库连接池\r\n */\r\n@Configuration\r\n@MapperScan(basePackages = \"{{packageName}}.dao\", sqlSessionFactoryRef = \"sqlSessionFactory\")\r\npublic class MybatisConfiguration {\r\n\r\n    @Bean(name = \"transactionManager\")\r\n    public DataSourceTransactionManager transactionManager(@Qualifier(\"dataSource\") DataSource dataSource) {\r\n        return new DataSourceTransactionManager(dataSource);\r\n    }\r\n\r\n    /**\r\n     * 设置mybatis相关属性\r\n     */\r\n    @Bean(name = \"sqlSessionFactory\")\r\n    public SqlSessionFactory sqlSessionFactory(@Qualifier(\"dataSource\") DataSource dataSource) throws Exception {\r\n        final SqlSessionFactoryBean factory = new SqlSessionFactoryBean();\r\n        // 初始化数据库\r\n        factory.setDataSource(dataSource);\r\n        factory.setFailFast(true);\r\n        factory.setVfs(SpringBootVFS.class);\r\n        // 设置别名包\r\n        factory.setTypeAliasesPackage(\r\n                \"{{packageName}}.dao,;{{packageName}}.entity\");\r\n        // factory.setTypeAliases(new Class[] { MybatisEncryptHandler.class });\r\n        final ResourcePatternResolver resolver = new PathMatchingResourcePatternResolver();\r\n        // 设置mapper映射路径\r\n        factory.setMapperLocations(resolver.getResources(\"classpath*:mappers/*Dao.xml\"));\r\n        org.apache.ibatis.session.Configuration con = new org.apache.ibatis.session.Configuration();\r\n        con.setLogPrefix(\"\");\r\n        con.setMapUnderscoreToCamelCase(true);\r\n        factory.setConfiguration(con);\r\n        return factory.getObject();\r\n    }\r\n\r\n    @Bean(\"sqlSessionTemplate\")\r\n    public SqlSessionTemplate qqlSessionTemplate(\r\n            @Qualifier(\"sqlSessionFactory\") SqlSessionFactory sessionfactory) {\r\n        return new SqlSessionTemplate(sessionfactory);\r\n    }\r\n\r\n}\r\n', '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (20, 0, 'BaseEntity.java', 'java', 'src.main.java.{{packageName}}.common.base', 'mybatis', '', 1, 1, 'package {{packageName}}.common.base;\r\n\r\nimport lombok.Getter;\r\nimport lombok.Setter;\r\nimport lombok.experimental.Accessors;\r\n\r\nimport java.util.Date;\r\n\r\n/**\r\n * 基本实体类参数配置\r\n *\r\n */\r\n@Getter\r\n@Setter\r\n@Accessors(chain = true)\r\npublic class BaseEntity {\r\n\r\n    /**\r\n     * 唯一主键\r\n     */\r\n    private Long id;\r\n\r\n    /**\r\n     * 创建时间\r\n     */\r\n    private Date createTime;\r\n\r\n    /**\r\n     * 更新时间\r\n     */\r\n    private Date updateTime;\r\n\r\n}\r\n', '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (21, 0, 'Demo.java', 'java', 'src.main.java.{{packageName}}.entity', 'mybatis', '', 1, 1, 'package {{packageName}}.entity;\r\n\r\nimport {{packageName}}.common.base.BaseEntity;\r\n\r\nimport lombok.Getter;\r\nimport lombok.Setter;\r\n\r\n@Getter\r\n@Setter\r\npublic class Demo extends BaseEntity {\r\n\r\n}', '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (22, 0, 'DemoDao.java', 'java', 'src.main.java.{{packageName}}.dao', 'mybatis', '', 1, 1, 'package {{packageName}}.dao;\r\n\r\nimport {{packageName}}.entity.Demo;\r\n\r\npublic interface DemoDao {\r\n\r\n    Demo get();\r\n\r\n}', '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (23, 0, 'DemoDao.xml', 'java', 'src.main.resources.mappers', 'mybatis', '', 1, 1, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\r\n        \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\r\n<mapper namespace=\"{{packageName}}.dao.DemoDao\">\r\n\r\n    <resultMap id=\"BaseResultMap\" type=\"Demo\">\r\n        <result column=\"id\" property=\"id\" />\r\n\r\n        <result column=\"create_time\" property=\"createTime\" />\r\n        <result column=\"update_time\" property=\"updateTime\" />\r\n    </resultMap>\r\n\r\n    <sql id=\"Base_Column_List\">\r\n        id,create_time,update_time\r\n    </sql>\r\n\r\n\r\n    <select id=\"get\" resultMap=\"BaseResultMap\">\r\n        SELECT\r\n        <include refid=\"Base_Column_List\" />\r\n        FROM demo\r\n        limit 1\r\n    </select>\r\n\r\n</mapper>', '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (24, 0, 'ResponseCode.java', 'java', 'src.main.java.{{packageName}}.common.base', '', '', 1, 1, 'package {{packageName}}.common.base;\n\nimport com.xiaoyu.nuwa.utils.response.BaseResponseCode;\n\n/**\n * @description 请求返回码<br/>\n *              错误码总6位 ,1xx通用,2xx保留,3xx为用户相关<br/>\n *              \n * \n */\npublic enum ResponseCode implements BaseResponseCode {\n\n    /**\n     * 000000,\"success\"\n     */\n    SUCCESS(\"000000\", \"success\"),\n    /**\n     * 110001,\"params error\"\n     */\n    ARGS_ERROR(\"110001\", \"params error\"),\n    /**\n     * 100404,\"no data\"\n     */\n    NO_DATA(\"100404\", \"no data\"),\n    /**\n     * 100500,\"business failed\"\n     */\n    FAILED(\"100500\", \"business failed\"),\n    /**\n     * 100600,\"out req error\"\n     */\n    OUTER_ERROR(\"100600\", \"request out service error\"),\n\n    /**\n     * 没登陆\n     */\n    UN_LOGIN(\"200001\", \" no login\"),\n    /**\n     * 没有权限\n     */\n    REQ_NOACCESS(\"200002\", \"no access\"),\n    /**\n     * 访问错误\n     */\n    REQ_ERROR(\"200003\", \"request error\"),\n\n    /**\n     * 签名错误\n     */\n    SIGN_ERROR(\"200004\", \"sign error\"),\n\n    /**\n     * 请求限流\n     */\n    REQUEST_LIMIT(\"200005\", \"request limit\"),\n\n    /**\n     * 重复请求\n     */\n    REQUEST_REPEAT(\"200006\", \"请求处理中\"),\n\n    ;\n\n    private String code;\n    private String message;\n\n    ResponseCode(String code, String msg) {\n        this.code = code;\n        this.message = msg;\n    }\n\n    public String code() {\n        return this.code;\n    }\n\n    public String msg() {\n        return this.message;\n    }\n}', '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (25, 0, 'ResponseMapper.java', 'java', 'src.main.java.{{packageName}}.common.base', '', '', 1, 1, 'package {{packageName}}.common.base;\n\nimport com.xiaoyu.nuwa.utils.response.BaseResponseMapper;\n\nimport lombok.Getter;\n\n@Getter\npublic class ResponseMapper implements BaseResponseMapper {\n\n    /**\n     * 默认为成功\n     */\n    private long count;\n    private String code;\n    private String message;\n    private Object data;\n\n    private ResponseMapper() {\n    }\n\n    public static final ResponseMapper createMapper() {\n        return createMapper(ResponseCode.SUCCESS);\n    }\n\n    public static final ResponseMapper createMapper(ResponseCode resp) {\n        return createMapper(resp.code(), resp.msg());\n    }\n\n    public static final ResponseMapper createMapper(String code, String msg) {\n        ResponseMapper mapper = new ResponseMapper();\n        mapper.message = msg;\n        mapper.code = code;\n        return mapper;\n    }\n\n    public ResponseMapper count(Long count) {\n        if (count == null) {\n            return this;\n        }\n        this.count = count;\n        return this;\n    }\n\n    public ResponseMapper data(Object data) {\n        if (data == null) {\n            return this;\n        }\n        this.data = data;\n        return this;\n    }\n\n    @Override\n    public String returnCode() {\n        return this.code;\n    }\n}', '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (29, 0, '.gitignore', 'java', '', '', '', 1, 1, 'HELP.md\r\ntarget/\r\n!.mvn/wrapper/maven-wrapper.jar\r\n!**/src/main/**/target/\r\n!**/src/test/**/target/\r\n\r\n### STS ###\r\n.apt_generated\r\n.classpath\r\n.factorypath\r\n.project\r\n.settings\r\n.springBeans\r\n.sts4-cache\r\n\r\n### IntelliJ IDEA ###\r\n.idea\r\n*.iws\r\n*.iml\r\n*.ipr\r\n\r\n### NetBeans ###\r\n/nbproject/private/\r\n/nbbuild/\r\n/dist/\r\n/nbdist/\r\n/.nb-gradle/\r\nbuild/\r\n!**/src/main/**/build/\r\n!**/src/test/**/build/\r\n\r\n### VS Code ###\r\n.vscode/\r\n.target\r\n.classpath\r\n.mvn/\r\n.idea/\r\n.settings/\r\n', '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (1000, 1, 'pom.xml', 'java', '', '', '', 2, 1, NULL, '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (1001, 2, 'build.sh', 'java', '', '', '', 2, 1, NULL, '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (1002, 3, 'startup.sh', 'java', '', '', '', 2, 1, NULL, '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (1003, 4, 'README.md', 'java', '', '', '', 2, 1, NULL, '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (1004, 5, 'log.xml', 'java', '{{projectName}}-web.src.main.resources.config.local', '', '{\"env\":\"local\"}', 2, 1, NULL, '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (1005, 5, 'log.xml', 'java', '{{projectName}}-web.src.main.resources.config.test', '', '{\"env\":\"test\"}', 2, 1, NULL, '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (1006, 5, 'log.xml', 'java', '{{projectName}}-web.src.main.resources.config.pre', '', '{\"env\":\"pre\"}', 2, 1, NULL, '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (1007, 5, 'log.xml', 'java', '{{projectName}}-web.src.main.resources.config.prod', '', '{\"env\":\"prod\"}', 2, 1, NULL, '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (1008, 9, 'application.yaml', 'java', '{{projectName}}-web.src.main.resources.config.local', '', '{\"env\":\"local\"}', 2, 1, NULL, '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (1009, 9, 'application.yaml', 'java', '{{projectName}}-web.src.main.resources.config.test', '', '{\"env\":\"test\"}', 2, 1, NULL, '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (1010, 9, 'application.yaml', 'java', '{{projectName}}-web.src.main.resources.config.pre', '', '{\"env\":\"pre\"}', 2, 1, NULL, '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (1011, 9, 'application.yaml', 'java', '{{projectName}}-web.src.main.resources.config.prod', '', '{\"env\":\"prod\"}', 2, 1, NULL, '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (1012, 17, 'Application.java', 'java', '{{projectName}}-web.src.main.java.{{packageName}}', '', '', 2, 1, NULL, '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (1013, 0, 'pom.xml', 'java', '{{projectName}}-web', '', '', 2, 1, '<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <artifactId>{{artifactId}}-web</artifactId>\r\n    <parent>\r\n        <groupId>{{groupId}}</groupId>\r\n        <artifactId>{{artifactId}}</artifactId>\r\n        <version>1.0</version>\r\n    </parent>\r\n    <packaging>jar</packaging>\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>{{groupId}}</groupId>\r\n            <artifactId>{{artifactId}}-service</artifactId>\r\n            <version>1.0</version>\r\n        </dependency>\r\n \r\n          <!--  spring-boot-starter-test-->\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-test</artifactId>\r\n            <scope>provided</scope>\r\n        </dependency>\r\n\r\n    </dependencies>\r\n    <build>\r\n        <finalName>{{projectName}}</finalName>\r\n        <resources>\r\n            <resource>\r\n                <directory>src/main/resources/config/local</directory>\r\n            </resource>\r\n            <resource>\r\n                <directory>src/main/resources</directory>\r\n            </resource>\r\n            <resource>\r\n                <directory>src/main/java</directory>\r\n                <filtering>false</filtering>\r\n            </resource>\r\n        </resources>\r\n\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.apache.maven.plugins</groupId>\r\n                <artifactId>maven-compiler-plugin</artifactId>\r\n                <configuration>\r\n                    <skip>true</skip>\r\n                </configuration>\r\n            </plugin>\r\n            <plugin>\r\n                <groupId>org.apache.maven.plugins</groupId>\r\n                <artifactId>maven-surefire-plugin</artifactId>\r\n                <configuration>\r\n                    <skip>true</skip>\r\n                </configuration>\r\n            </plugin>\r\n            <plugin>\r\n                <groupId>org.springframework.boot</groupId>\r\n                <artifactId>spring-boot-maven-plugin</artifactId>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n</project>', '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (1014, 0, 'pom.xml', 'java', '{{projectName}}-service', '', '', 2, 1, '<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <parent>\r\n        <groupId>{{groupId}}</groupId>\r\n        <artifactId>{{artifactId}}</artifactId>\r\n        <version>1.0</version>\r\n    </parent>\r\n    <artifactId>{{artifactId}}-service</artifactId>\r\n    <packaging>jar</packaging>\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>{{groupId}}</groupId>\r\n            <artifactId>{{artifactId}}-common</artifactId>\r\n            <version>1.0</version>\r\n        </dependency>\r\n \r\n    </dependencies>\r\n    <build>\r\n        <resources>\r\n            <resource>\r\n                <directory>src/main/resources</directory>\r\n                <filtering>false</filtering>\r\n            </resource>\r\n        </resources>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.apache.maven.plugins</groupId>\r\n                <artifactId>maven-compiler-plugin</artifactId>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n</project>', '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (1015, 0, 'pom.xml', 'java', '{{projectName}}-common', '', '', 2, 1, '<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <parent>\r\n        <groupId>{{groupId}}</groupId>\r\n        <artifactId>{{artifactId}}</artifactId>\r\n        <version>1.0</version>\r\n    </parent>\r\n    <artifactId>{{artifactId}}-common</artifactId>\r\n    <packaging>jar</packaging>\r\n    <properties>\r\n    </properties>\r\n    <dependencies>\r\n\r\n         <!-- slf4j-api -->\r\n         <dependency>\r\n            <groupId>org.slf4j</groupId>\r\n            <artifactId>slf4j-api</artifactId>\r\n            <scope>compile</scope>\r\n        </dependency>\r\n    </dependencies>\r\n    <build>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.apache.maven.plugins</groupId>\r\n                <artifactId>maven-compiler-plugin</artifactId>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n</project>', '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (1016, 18, 'DataSourceConfiguration.java', 'java', '{{projectName}}-service.src.main.java.{{packageName}}.configuration', 'mysql', '', 2, 2, NULL, '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (1017, 19, 'MybatisConfiguration.java', 'java', '{{projectName}}-service.src.main.java.{{packageName}}.configuration', 'mybatis', '', 2, 2, NULL, '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (1018, 20, 'BaseEntity.java', 'java', '{{projectName}}-service.src.main.java.{{packageName}}.common.base', 'mybatis', '', 2, 2, NULL, '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (1019, 21, 'Demo.java', 'java', '{{projectName}}-service.src.main.java.{{packageName}}.entity', 'mybatis', '', 2, 2, NULL, '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (1020, 22, 'DemoDao.java', 'java', '{{projectName}}-service.src.main.java.{{packageName}}.dao', 'mybatis', '', 2, 2, NULL, '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (1021, 23, 'DemoDao.xml', 'java', '{{projectName}}-service.src.main.resources.mappers', 'mybatis', '', 2, 2, NULL, '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (1022, 24, 'ResponseCode.java', 'java', '{{projectName}}-common.src.main.java.{{packageName}}.common.base', '', '', 2, 1, NULL, '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (1023, 25, 'ResponseMapper.java', 'java', '{{projectName}}-common.src.main.java.{{packageName}}.common.base', '', '', 2, 1, NULL, '1970-01-01 00:00:00', '1970-01-01 00:00:00');
INSERT INTO `template` (`id`, `relative_id`, `name`, `language`, `path`, `pack_name`, `params`, `struct_type`, `gen_option`, `content`, `create_time`, `update_time`) VALUES (1027, 29, '.gitignore', 'java', '', '', '', 2, 1, NULL, '1970-01-01 00:00:00', '1970-01-01 00:00:00');
COMMIT;

SET FOREIGN_KEY_CHECKS = 1;
